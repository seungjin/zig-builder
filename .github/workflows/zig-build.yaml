name: Zig Builder
on:
  push:
    branches:
      - main
  schedule:
    - cron: "30 5,17 * * *"
env:
  llvmVer: 15
jobs:
  Zig-Latest-Build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - run: sudo apt-get update -y
      - run: sudo apt-get install -y ca-certificates apt-utils lsb-release
      - name: Copy llvm source list
        run: |
          sudo cp ${{ github.workspace }}/llvm.source.list /etc/apt/sources.list.d/llvm.source.list
      - run: sudo apt-get update -y
      - run: sudo apt-get dist-upgrade -y
      - run: sudo apt install -y git build-essential cmake llvm-$llvmVer llvm-$llvmVer-dev lld lld-$llvmVer liblld-$llvmVer-dev clang-$llvmVer libclang-$llvmVer-dev zlib1g-dev
      - uses: actions/checkout@master
        with:
          repository: ziglang/zig
          path: zig
          ref: master
      - name: zig git hash
        run: echo ::set-output name=GIT_HASH::$(git rev-parse --short=9 HEAD)
        working-directory: ${{ github.workspace }}/zig/
        id: zig_source
      - name: Make build directory under zig
        run: mkdir ${{ github.workspace }}/zig/build
      - name: Run cmake
        working-directory: ${{ github.workspace }}/zig/build
        run: cmake ..
      - name: Creating swapfile / Use swap
        run: |
          sudo fallocate -l 4GB /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
      - name: Make install
        working-directory: ${{ github.workspace }}/zig/build
        run: make install
      - name: Get built zig version
        run: |
          echo ::set-output name=ZIG_VER::$(${{ github.workspace }}/zig/build/stage3/bin/zig version)
          echo ::set-output name=RELEASE::zig-$(${{ github.workspace }}/zig/build/stage3/bin/zig version)-dev.${{ github.run_number }}+${{ steps.zig_source.outputs.GIT_HASH}}
        id: zig_ver
      - name: Make zig release directory
        run: mkdir -p ${{ github.workspace }}/${{ steps.zig_ver.outputs.RELEASE }}
      - name: Copy results into release directory (bin)
        run: cp -pr ${{ github.workspace }}/zig/build/stage3/bin ${{ github.workspace }}/${{ steps.zig_ver.outputs.RELEASE }}/
      - name: Copy results into release directory (lib)
        run: cp -pr ${{ github.workspace }}/zig/build/stage3/lib/zig/ ${{ github.workspace }}/${{ steps.zig_ver.outputs.RELEASE }}/lib/
      - name: tar/gz outcomes
        run: tar -czvf ${{ steps.zig_ver.outputs.RELEASE }}.tar.gz ${{ github.workspace }}/${{ steps.zig_ver.outputs.RELEASE }}
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.zig_ver.outputs.RELEASE }}.tar.gz
          path: ${{ github.workspace }}/${{ steps.zig_ver.outputs.RELEASE }}.tar.gz
      - name: release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.zig_ver.outputs.RELEASE }}
          release_name: Release ${{ steps.zig_ver.outputs.RELEASE }}
          body_path: zigling/zig/README.md
          draft: false
          prerelease: false
          repo: ziglang/zig
